import json 
from qdrant_client import QdrantClient,models
from sentence_transformers import SentenceTransformer
import os 
from dotenv import load_dotenv

with open('morocco_data.json','r',encoding='utf-8') as f : 
    data = json.load(f)


def extract_document(file):
    documents = []
    for category, info in file.items():
        if isinstance(info,dict):
            for sub,text in info.items():
                documents.append({
                    'category' : category,
                    'title' : sub,
                    'description' : text
                }) 
        else : 
            documents.append({
                'category': category,
                'subcategory': '',
                'description': info
            })

    return documents

documents = extract_document(data)

for doc in documents:
    if not isinstance(doc["description"], str):
        if isinstance(doc["description"], list):
            doc["description"] = " ".join(str(item) for item in doc["description"])
        else:
            doc["description"] = str(doc["description"])

load_dotenv()
api_key = os.getenv('API_KEY')
url = os.getenv('URL')
if not api_key or not url :
    raise ValueError("API_KEY (or/and) URL not found in .env file")


client = QdrantClient(
    url=url, 
    api_key=api_key,
)

encoder = SentenceTransformer("all-MiniLM-L6-v2")

client.create_collection(
    collection_name='Tourisme_in_morocco',
    vectors_config=models.VectorParams(
        size=encoder.get_sentence_embedding_dimension(),
        distance=models.Distance.COSINE
    )
)

client.upload_points(
    collection_name='Tourisme_in_morocco',
    points=[
        models.PointStruct(
            id = idx, vector = encoder.encode(doc["description"]).tolist(), payload = doc
        )
        for idx, doc in enumerate(documents)
    ]
)